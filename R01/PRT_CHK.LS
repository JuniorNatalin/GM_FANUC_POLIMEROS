/PROG  PRT_CHK	  Macro
/ATTR
OWNER		= MNEDITOR;
COMMENT		= "CHK PART PRESENT";
PROG_SIZE	= 6134;
CREATE		= DATE 06-12-07  TIME 07:27:22;
MODIFIED	= DATE 16-10-26  TIME 11:32:14;
FILE_NAME	= ;
VERSION		= 0;
LINE_COUNT	= 291;
MEMORY_SIZE	= 6922;
PROTECT		= READ;
STORAGE		= CMOS;
TCD:  STACK_SIZE	= 0,
      TASK_PRIORITY	= 50,
      TIME_SLICE	= 0,
      BUSY_LAMP_OFF	= 0,
      ABORT_REQUEST	= 0,
      PAUSE_REQUEST	= 0;
DEFAULT_GROUP	= *,*,*,*,*;
CONTROL_CODE	= 00000000 00000000;
/APPL
  HANDLING : TRUE ; 
/MN
   1:  !******************************** ;
   2:  !  GM METAL FORMING GLOBAL 4 S/W ;
   3:  !******************************** ;
   4:  ! MACRO THAT CHECKS  AND  REPORTS ;
   5:  ! PART PRESENT STATUS  WITH  PART ;
   6:  ! AND WITHOUT PART,  FOR  VENTURI ;
   7:  ! VACUUM SYSTEMS. THIS HANDLES UP ;
   8:  ! TO FOUR PART PRESENT SENSORS, ;
   9:  ! AND SUPPORTS BYPASS ON ONE OF ;
  10:  ! TWO TOOL SIDES. ;
  11:  !******************************** ;
  12:  ! AR[1]=1 FOR PART-PRESENT  (PP) ;
  13:  ! AR[1]=0 FOR PRT-NOT-PRSNT (PNP) ;
  14:  !******************************** ;
  15:  ! 2016-10-25 Global-4 S/W Rel 4.0 ;
  16:  !******************************** ;
  17:   ;
  18:  R[161]=AR[1]    ;
  19:  R[136]=DI[276:ON ]    ;
  20:  $WAITTMOUT=200 ;
  21:   ;
  22:  LBL[1] ;
  23:  IF DI[10:OFF]=ON,JMP LBL[100] ;
  24:   ;
  25:  !******************************** ;
  26:  SELECT R[155]=1,JMP LBL[10] ;
  27:         =2,JMP LBL[50] ;
  28:         ELSE,JMP LBL[99] ;
  29:   ;
  30:   ;
  31:  !******************************** ;
  32:  LBL[10:VENTURI PROXES] ;
  33:  ! Send Part-Present status to PLC ;
  34:   ;
  35:  IF R[211]=0,JMP LBL[12] ;
  36:  R[215]=DI[801:OFF]    ;
  37:  DO[269:OFF]=R[215] ;
  38:   ;
  39:  LBL[12] ;
  40:  IF R[212]=0,JMP LBL[14] ;
  41:  R[215]=DI[802:OFF]    ;
  42:  DO[270:OFF]=R[215] ;
  43:   ;
  44:  LBL[14] ;
  45:  IF R[213]=0,JMP LBL[16] ;
  46:  R[215]=DI[803:OFF]    ;
  47:  DO[271:OFF]=R[215] ;
  48:   ;
  49:  LBL[16] ;
  50:  IF R[214]=0,JMP LBL[18] ;
  51:  R[215]=DI[804:OFF]    ;
  52:  DO[272:OFF]=R[215] ;
  53:   ;
  54:  LBL[18] ;
  55:  SELECT R[161]=1,JMP LBL[20] ;
  56:         =0,JMP LBL[40] ;
  57:         ELSE,JMP LBL[99] ;
  58:   ;
  59:  !-------------------------------- ;
  60:  !CHECK FOR PART PRESENT (PP) ;
  61:  LBL[20:CHK FOR PP] ;
  62:  IF R[165]=1,JMP LBL[100] ;
  63:   ;
  64:  IF R[148]=1 OR DI[282:OFF]=ON,JMP LBL[30] ;
  65:  IF R[149]=1 OR DI[283:OFF]=ON,JMP LBL[35] ;
  66:   ;
  67:  ! PP Sensor-1 ;
  68:  IF R[211]=0,JMP LBL[22] ;
  69:  WAIT DI[801:OFF]=ON TIMEOUT,LBL[70] ;
  70:  R[147]=1    ;
  71:  GO[71:0]=0 ;
  72:   ;
  73:  LBL[22] ;
  74:  ! PP Sensor-2 ;
  75:  IF R[212]=0,JMP LBL[23] ;
  76:  WAIT DI[802:OFF]=ON TIMEOUT,LBL[70] ;
  77:  R[147]=1    ;
  78:  GO[71:0]=0 ;
  79:   ;
  80:  LBL[23] ;
  81:  ! PP Sensor-3 ;
  82:  IF R[213]=0,JMP LBL[24] ;
  83:  WAIT DI[803:OFF]=ON TIMEOUT,LBL[70] ;
  84:  R[147]=1    ;
  85:  GO[71:0]=0 ;
  86:   ;
  87:  LBL[24] ;
  88:  ! PP Sensor-4 ;
  89:  IF R[214]=0,JMP LBL[100] ;
  90:  WAIT DI[804:OFF]=ON TIMEOUT,LBL[70] ;
  91:  R[147]=1    ;
  92:  GO[71:0]=0 ;
  93:   ;
  94:  JMP LBL[100] ;
  95:   ;
  96:  !------------------- ;
  97:  LBL[30:BYPASS SIDE1] ;
  98:   ;
  99:  IF R[149]=1 OR DI[283:OFF]=ON,JMP LBL[96] ;
 100:  ! PP Sensor-3 ;
 101:  IF R[213]=0,JMP LBL[32] ;
 102:  WAIT DI[803:OFF]=ON TIMEOUT,LBL[70] ;
 103:  R[147]=1    ;
 104:  GO[71:0]=0 ;
 105:   ;
 106:  LBL[32] ;
 107:  ! PP Sensor-4 ;
 108:  IF R[214]=0,JMP LBL[100] ;
 109:  WAIT DI[804:OFF]=ON TIMEOUT,LBL[70] ;
 110:  R[147]=1    ;
 111:  GO[71:0]=0 ;
 112:   ;
 113:  JMP LBL[100] ;
 114:   ;
 115:  !------------------- ;
 116:  LBL[35:BYPASS SIDE2] ;
 117:   ;
 118:  IF R[148]=1 OR DI[282:OFF]=ON,JMP LBL[96] ;
 119:  ! PP Sensor-1 ;
 120:  IF R[211]=0,JMP LBL[37] ;
 121:  WAIT DI[801:OFF]=ON TIMEOUT,LBL[70] ;
 122:  R[147]=1    ;
 123:  GO[71:0]=0 ;
 124:   ;
 125:  LBL[37] ;
 126:  ! PP Sensor-2 ;
 127:  IF R[212]=0,JMP LBL[100] ;
 128:  WAIT DI[802:OFF]=ON TIMEOUT,LBL[70] ;
 129:  R[147]=1    ;
 130:  GO[71:0]=0 ;
 131:  JMP LBL[100] ;
 132:   ;
 133:  !-------------------------------- ;
 134:  !CHECK FOR PART NOT PRESENT (PNP) ;
 135:  LBL[40:CHK FOR PNP] ;
 136:   ;
 137:  ! PP Sensor-1 ;
 138:  IF R[211]=0,JMP LBL[42] ;
 139:  WAIT DI[801:OFF]=OFF TIMEOUT,LBL[80] ;
 140:  R[147]=1    ;
 141:  GO[71:0]=0 ;
 142:   ;
 143:  LBL[42] ;
 144:  ! PP Sensor-2 ;
 145:  IF R[212]=0,JMP LBL[43] ;
 146:  WAIT DI[802:OFF]=OFF TIMEOUT,LBL[80] ;
 147:  R[147]=1    ;
 148:  GO[71:0]=0 ;
 149:   ;
 150:  LBL[43] ;
 151:  ! PP Sensor-3 ;
 152:  IF R[213]=0,JMP LBL[44] ;
 153:  WAIT DI[803:OFF]=OFF TIMEOUT,LBL[80] ;
 154:  R[147]=1    ;
 155:  GO[71:0]=0 ;
 156:   ;
 157:  LBL[44] ;
 158:  ! PP Sensor-4 ;
 159:  IF R[214]=0,JMP LBL[100] ;
 160:  WAIT DI[804:OFF]=OFF TIMEOUT,LBL[80] ;
 161:  R[147]=1    ;
 162:  GO[71:0]=0 ;
 163:  JMP LBL[100] ;
 164:   ;
 165:   ;
 166:  !******************************** ;
 167:  LBL[50:SMART VAC PUMP] ;
 168:  ! Send Part-Present status to PLC ;
 169:  R[143]=DI[685:OFF]    ;
 170:  DO[273:OFF]=R[143] ;
 171:  R[144]=DI[686:OFF]    ;
 172:  DO[274:OFF]=R[144] ;
 173:   ;
 174:  SELECT R[161]=1,JMP LBL[51] ;
 175:         =0,JMP LBL[60] ;
 176:         ELSE,JMP LBL[99] ;
 177:   ;
 178:  LBL[51] ;
 179:  IF R[165]=1,JMP LBL[100] ;
 180:   ;
 181:  IF R[148]=1 OR DI[282:OFF]=ON,JMP LBL[55] ;
 182:  IF R[149]=1 OR DI[283:OFF]=ON,JMP LBL[56] ;
 183:   ;
 184:  WAIT DI[685:OFF]=ON AND DI[686:OFF]=ON TIMEOUT,LBL[70] ;
 185:  R[147]=1    ;
 186:  GO[71:0]=0 ;
 187:  JMP LBL[100] ;
 188:   ;
 189:  LBL[55:BYPASS CH1] ;
 190:  WAIT DI[686:OFF]=ON TIMEOUT,LBL[70] ;
 191:  R[147]=1    ;
 192:  GO[71:0]=0 ;
 193:  JMP LBL[100] ;
 194:   ;
 195:  LBL[56:BYPASS CH2] ;
 196:  WAIT DI[685:OFF]=ON TIMEOUT,LBL[70] ;
 197:  R[147]=1    ;
 198:  GO[71:0]=0 ;
 199:  JMP LBL[100] ;
 200:   ;
 201:  !-------------------------------- ;
 202:  !CHECK FOR PART NOT PRESENT (PNP) ;
 203:  LBL[60:CHK FOR PNP] ;
 204:  WAIT DI[685:OFF]=OFF AND DI[686:OFF]=OFF TIMEOUT,LBL[80] ;
 205:  R[147]=1    ;
 206:  GO[71:0]=0 ;
 207:  JMP LBL[100] ;
 208:   ;
 209:   ;
 210:  !******************************** ;
 211:  LBL[70:PART LOST] ;
 212:  ! PART PRESENT OFF ... MUST BE ON ;
 213:  DO[523:OFF]=ON ;
 214:  R[147]=0    ;
 215:  IF R[167]=1,JMP LBL[100] ;
 216:   ;
 217:  SELECT R[136]=1,JMP LBL[71] ;
 218:         =0,JMP LBL[72] ;
 219:         ELSE,JMP LBL[98] ;
 220:   ;
 221:  LBL[71:RECOVRY FROM HMI] ;
 222:  MESSAGE[...] ;
 223:  MESSAGE[PRT_CHK: PART LOST FLT] ;
 224:  MH FAULT RECOVRY(121,1,1) ;
 225:  JMP LBL[100] ;
 226:   ;
 227:  LBL[72:RECOVERY FROM TP] ;
 228:  MESSAGE[...] ;
 229:  MESSAGE[PRT_CHK: PART LOST FLT] ;
 230:  MH FAULT RECOVRY(123,1,1) ;
 231:  JMP LBL[100] ;
 232:   ;
 233:   ;
 234:  !******************************** ;
 235:  LBL[80:PART NOT RELEASD] ;
 236:  ! PART PRESENT ON ... MUST BE OFF ;
 237:  DO[523:OFF]=ON ;
 238:  R[147]=0    ;
 239:  IF R[167]=1,JMP LBL[100] ;
 240:   ;
 241:  SELECT R[136]=1,JMP LBL[81] ;
 242:         =0,JMP LBL[82] ;
 243:         ELSE,JMP LBL[98] ;
 244:   ;
 245:  LBL[81:RECOVRY FROM HMI] ;
 246:  MESSAGE[...] ;
 247:  MESSAGE[PRT_CHK: PRT NOT RELEASED] ;
 248:  MH FAULT RECOVRY(122,1,2) ;
 249:  JMP LBL[100] ;
 250:   ;
 251:  LBL[82:RECOVERY FROM TP] ;
 252:  MESSAGE[...] ;
 253:  MESSAGE[PRT_CHK: PRT NOT RELEASED] ;
 254:  MH FAULT RECOVRY(124,1,2) ;
 255:  JMP LBL[100] ;
 256:   ;
 257:   ;
 258:  !******************************** ;
 259:  LBL[96:ABORT-WRONG PARM] ;
 260:  MESSAGE[...] ;
 261:  MESSAGE[PRT_CHK: BOTH TOOLING] ;
 262:  MESSAGE[TOOL ARE BYPASSED ...] ;
 263:  MESSAGE[PROGRAM ABORTED ...] ;
 264:  ABORT ;
 265:   ;
 266:  !******************************** ;
 267:  LBL[97:ABORT-WRONG PARM] ;
 268:  MESSAGE[...] ;
 269:  MESSAGE[PRT_CHK: WRONG VALUE IN] ;
 270:  MESSAGE[R[155] FOR VACUUM TYPE] ;
 271:  MESSAGE[SET 1 FOR VENTURI AND] ;
 272:  MESSAGE[SET 2 FOR SMART PUMP] ;
 273:  ABORT ;
 274:   ;
 275:  !******************************** ;
 276:  LBL[98:ABORT-WRONG PARM] ;
 277:  MESSAGE[...] ;
 278:  MESSAGE[PRT_CHK: WRONG VALUE] ;
 279:  MESSAGE[FOR REG R[136] ...] ;
 280:  MESSAGE[PROGRAM ABORTED ...] ;
 281:  ABORT ;
 282:   ;
 283:  !******************************** ;
 284:  LBL[99:ABORT-WRONG ARGM] ;
 285:  MESSAGE[...] ;
 286:  MESSAGE[WRONG ARGMNT IN PRT_CHK] ;
 287:  MESSAGE[PROGRAM ABORTED ...] ;
 288:  ABORT ;
 289:   ;
 290:  !******************************** ;
 291:  LBL[100:END OF PROGRAM] ;
/POS
/END
